name: 'Deploy via VPN'
description: 'Connect to VPN and deploy Docker image via Ansible script'

inputs:
  docker-username:
    description: "Docker username for authentication"
    default: ${{ github.actor }}
    required: false
  docker-password:
    description: "Docker password for authentication"
    required: false
  app-name:
    description: "Name of the application to deploy"
    required: true
  version-number:
    description: "Version number for the deployment"
    default: ${{ github.run_number }}
    required: true
  docker-registry:
    description: "Docker registry URL. If not provided, defaults to Github Docker Hub."
    default: "ghcr.io"
    required: false
  vpn-conf:
    description: "VPN configuration"
    required: true
  vpn-client-cert:
    description: "VPN client certificate"
    required: true
  vpn-client-key:
    description: "VPN client key"
    required: true
  vpn-ca-cert:
    description: "VPN CA certificate"
    required: true
  vpn-ta-key:
    description: "VPN TLS auth key"
    required: true
  docker-image:
    description: "Docker image to deploy"
    required: false
  awx-username:
    description: "AWX username for authentication"
    required: true
  awx-password:
    description: "AWX password for authentication"
    required: true
  awx-services-id:
    description: "AWX services ID for deployment"
    required: true
  tars-slack-webhook-url:
    description: "Slack webhook URL for notifications"
    required: true
  deploy-env:
    description: "Deployment environment (e.g., staging,test, production)"
    default: "staging"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Install Dependencies
      run: |
          sudo apt-get update
          sudo apt-get install -y openvpn ansible openssh-client traceroute
      shell: bash
    
    - name: Set Up VPN Config
      run: |
          # Vérifier que le secret VPN_CONFIG existe et n'est pas vide
          if [[ -z "${{ inputs.vpn-conf }}" ]]; then
            echo "Erreur: Le secret VPN_CONFIG est vide ou n'existe pas"
            exit 1
          fi

          # Écrire la configuration VPN directement (non encodée)
          echo "${{ inputs.vpn-conf }}" > vpn.conf

          # Setup certificate-based authentication for VPN
          if [[ -n "${{ inputs.vpn-client-cert }}" && -n "${{ inputs.vpn-client-key }}" ]]; then
            echo "${{ inputs.vpn-client-cert }}" > github.crt
            echo "${{ inputs.vpn-client-key }}" > github.key
            echo "cert github.crt" >> vpn.conf
            echo "key github.key" >> vpn.conf
            chmod 600 github.key  # Secure the private key file
          fi

          # Add CA certificate if available
          if [[ -n "${{ inputs.vpn-ca-cert }}" ]]; then
            echo "${{ inputs.vpn-ca-cert }}" > ca.crt
            echo "ca ca.crt" >> vpn.conf
          fi

          # Add TLS auth key if available
          if [[ -n "${{ inputs.vpn-ta-key }}" ]]; then
            echo "${{ inputs.vpn-ta-key }}" > ta.key
            echo "tls-auth ta.key 1" >> vpn.conf
            chmod 600 ta.key  # Secure the TLS auth key file
          fi

          # Vérifier que le fichier vpn.conf a été créé
          if [[ ! -f vpn.conf ]]; then
            echo "Erreur: Le fichier vpn.conf n'a pas été créé"
            exit 1
          fi

          echo "Configuration VPN configurée avec succès"
      shell: bash

    - name: Connect to VPN
      run: |
                  sudo openvpn --config vpn.conf --daemon
                  echo "=== Vérification de la connexion VPN ==="
                  sleep 10
                  echo "=== Debug: see VPN interfaces ==="
                  ip a 
                  echo "=== Vérification des routes ==="
                  ip route
                  echo "=== Traceroute ==="
                  traceroute ansible.cluster.auctelia.com || true
                  echo "=== Test DNS ==="
                  nslookup ansible.cluster.auctelia.com || true
                  echo "=== Test ping ==="
                  ping -c 3 ansible.cluster.auctelia.com || true
      shell: bash

    - name: Fix route to cluster
      run: |
          sudo ip route del 10.1.0.0/20 dev eth0 || true
          sudo ip route add 10.0.0.0/16 dev tun0
      shell: bash

    - name: Call Ansible Deployment API
      run: |
                curl -X POST "http://ansible.cluster.auctelia.com/api/v2/job_templates/${{ inputs.awx-services-id }}/launch/" \
                  -H "Content-Type: application/json" \
                  -u "${{ inputs.awx-username }}:${{ inputs.awx-password }}" \
                  -d '{
                        "extra_vars":{
                          "deploy_env": "${{ inputs.deploy-env }}",
                          "deploy_image_tag": "v${{ github.run_number }}",
                          "docker_image": "${{ inputs.docker-image }}"
                        }
                    }'
      shell: bash
      
    - name: Disconnect VPN
      if: always()
      run: |
            sudo pkill openvpn || true
            echo "VPN disconnected"
      shell: bash
          
    - name: Send Slack Notification for Deployment
      run: |
          sudo openvpn --config vpn.conf --daemon
          sleep 10  # Wait for VPN to establish
          ip a      # Debug: see VPN interfaces
      shell: bash
